module FPGA2_UART_Receiver(
    input wire clk,     // 50 MHz clock
    input wire rx,      // UART RX input
    output reg led      // LED output
);

    wire [7:0] data;
    wire data_ready;

    UART_Receiver uart_rx (
        .clk(clk),
        .rx(rx),
        .data(data),
        .ready(data_ready)
    );

    always @(posedge clk) begin
        if (data_ready && data == 8'b00110001) begin
            led <= 1; // Turn LED ON when ASCII '1' is received
        end else begin
            led <= 0; // Turn LED OFF otherwise
        end
    end

endmodule

module UART_Receiver(
    input wire clk,
    input wire rx,
    output reg [7:0] data,
    output reg ready
);
    parameter CLK_FREQ = 50000000;
    parameter BAUD_RATE = 115200;
    parameter BIT_PERIOD = CLK_FREQ / BAUD_RATE;

    reg [3:0] bit_index = 0;
    reg [15:0] clk_count = 0;
    reg [7:0] shift_reg = 8'b0;
    reg rx_reg = 1;
    reg rx_prev = 1;

    always @(posedge clk) begin
        rx_prev <= rx;
        if (!rx && rx_prev) begin
            clk_count <= BIT_PERIOD / 2;
            bit_index <= 0;
            ready <= 0;
        end else if (clk_count > 0) begin
            clk_count <= clk_count - 1;
        end else if (bit_index < 8) begin
            clk_count <= BIT_PERIOD;
            shift_reg <= {rx, shift_reg[7:1]};
            bit_index <= bit_index + 1;
        end else if (bit_index == 8) begin
            data <= shift_reg;
            ready <= 1;
            bit_index <= 9;
        end
    end
endmodule
